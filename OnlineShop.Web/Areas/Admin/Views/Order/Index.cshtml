@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<OnlineShop.Web.ViewModels.Order.OrderIndexViewModel>

@{
    ViewData["Title"] = "Orders";
}

<div class="container my-4">
    <h2 class="text-center mb-4">Orders</h2>

    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle text-center">
            <thead class="table-dark">
                <tr>
                    <th>Order ID</th>
                    <th>Order Date</th>
                    <th>Total Amount</th>
                    <th>Status</th>
                    <th>User</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.OrderId</td>
                    <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                    <td>@order.TotalAmount.ToString("C", new CultureInfo("en-US"))</td>
                    <td>
                        <span class="badge @(order.IsCompleted ? "bg-success" : order.IsCancelled ? "bg-danger" : "bg-warning")">
                            @(order.IsCompleted ? "Completed" : order.IsCancelled ? "Cancelled" : "Pending")
                        </span>
                    </td>
                    <td>@order.UserName</td>
                    <td>
                        <a asp-action="Details" asp-controller="Order" asp-route-id="@order.OrderId" class="btn btn-info btn-sm">
                                <i class="bi bi-eye"></i> Details <i class="fa-solid fa-circle-info"></i>
                        </a>
                        @if (!order.IsCompleted && !order.IsCancelled)
                        {
                            <form asp-action="CancelOrder" asp-controller="Order" asp-route-id="@order.OrderId" method="post" class="d-inline">
                                <input type="hidden" name="currentPage" value="@Model.PageNumber" />
                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to cancel this order?')">
                                        <i class="bi bi-x-circle"></i> Cancel <i class="fa-solid fa-ban"></i>
                                </button>
                            </form>
                        }
                        @if (order.IsCancelled)
                        {
                            <form asp-action="Reactivate" asp-controller="Order" asp-route-id="@order.OrderId" method="post" class="d-inline">
                                <input type="hidden" name="currentPage" value="@Model.PageNumber" />
                                <button type="submit" class="btn btn-success btn-sm">
                                    <i class="bi bi-x-circle"></i> Reactivate
                                </button>
                            </form>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded
        })
    </nav>
</div>
