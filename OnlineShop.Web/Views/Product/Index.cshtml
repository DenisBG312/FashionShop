@model IEnumerable<OnlineShop.Data.Models.Product>

@{
    ViewData["Title"] = "Products";
    var genderId = ViewContext.HttpContext.Request.Query["genderId"].ToString();
    var clothingTypeId = ViewContext.HttpContext.Request.Query["clothingTypeId"].ToString();
}

<div class="container my-5">
    <h1 class="text-center mb-5">Our Products</h1>

    <!-- Filtering Options -->
    <div class="row mb-4 text-center">
        <!-- Center the row -->
        <div class="col-md-4">
            <h5>Filter by Gender:</h5>
            <div class="d-flex justify-content-center flex-wrap">
                <!-- Center buttons -->
                <a href="@Url.Action("Index", "Product", new { genderId = "1", clothingTypeId })" class="btn btn-outline-primary me-2 @(genderId == "1" ? "active" : "")">Men</a>
                <a href="@Url.Action("Index", "Product", new { genderId = "2", clothingTypeId })" class="btn btn-outline-primary me-2 @(genderId == "2" ? "active" : "")">Women</a>
                <a href="@Url.Action("Index", "Product", new { genderId = "3", clothingTypeId })" class="btn btn-outline-primary me-2 @(genderId == "3" ? "active" : "")">Kids</a>
            </div>
        </div>
        <div class="col-md-4">
            <h5>Filter by Clothing Type:</h5>
            <div class="d-flex justify-content-center flex-wrap">
                <!-- Center buttons -->
                <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "1" })" class="btn btn-outline-primary me-2 @(clothingTypeId == "1" ? "active" : "")">T-Shirts</a>
                <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "2" })" class="btn btn-outline-primary me-2 @(clothingTypeId == "2" ? "active" : "")">Jackets</a>
                <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "3" })" class="btn btn-outline-primary me-2 @(clothingTypeId == "3" ? "active" : "")">Shoes</a>
                <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "4" })" class="btn btn-outline-primary me-2 mt-2 @(clothingTypeId == "4" ? "active" : "")">Jeans</a>
                <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "5" })" class="btn btn-outline-primary me-2 mt-2 @(clothingTypeId == "5" ? "active" : "")">Shirts</a>
                <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "6" })" class="btn btn-outline-primary me-2 mt-2 @(clothingTypeId == "6" ? "active" : "")">Shorts</a>
            </div>
        </div>
        <div class="col-md-4">
            <!-- Single Reset Button -->
            <h5>&nbsp;</h5> <!-- Just for spacing -->
            <div class="d-flex justify-content-center">
                <!-- Center the reset button -->
                <a href="@Url.Action("Index", "Product", new { genderId = "", clothingTypeId = "" })" class="btn btn-outline-secondary">Reset Filters</a>
            </div>
        </div>
    </div>

    <!-- Product Grid -->
    <div class="row g-4">
        @foreach (var product in Model)
        {
            <div class="col-sm-6 col-md-4">
                <!-- Card Styling -->
                <div class="card product-card shadow-sm" style="border-radius: 15px; overflow: hidden;">
                    <!-- Product Image -->
                    <div class="card-img-top p-3 text-center bg-light" style="height: 280px;">
                        <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 100%; width: auto; object-fit: contain;">
                    </div>

                    <!-- Card Body -->
                    <div class="card-body text-center">
                        <!-- Product Name -->
                        <h5 class="card-title font-weight-bold">@product.Name</h5>

                        <!-- Product Price -->
                        <p class="card-text text-success fw-bold" style="font-size: 1.2rem;">@product.Price.ToString("C")</p>

                        <!-- Stock Quantity -->
                        <p class="card-text text-muted">Stock: <strong>@product.StockQuantity</strong></p>

                        <!-- View Details Button -->
                        <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-outline-primary rounded-pill px-4">
                            View Details <i class="fa-solid fa-circle-info"></i>
                        </a>

                        <!-- Add to Cart Button -->
                        <form asp-action="AddToCart" asp-controller="ShoppingCart" method="post" class="mt-3">
                            <input type="hidden" name="productId" value="@product.Id" />
                            <input type="hidden" name="quantity" value="1" />
                            <button type="submit" class="btn btn-success rounded-pill px-4">
                                Add to Cart <i class="fa-solid fa-cart-shopping"></i>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
