@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@using OnlineShop.Web.Resources
@model IEnumerable<OnlineShop.Data.Models.Product>

@{
    ViewData["Title"] = "Products";
    var genderId = ViewContext.HttpContext.Request.Query["genderId"].ToString();
    var clothingTypeId = ViewContext.HttpContext.Request.Query["clothingTypeId"].ToString();
}

<link href="~/css/product-index.css" rel="stylesheet" />

<style>
    .product-card {
        transition: transform 0.3s ease;
        border: 1px solid rgba(0, 0, 0, 0.125);
        position: relative;
        overflow: hidden;
    }

        .product-card.on-sale {
            background: linear-gradient(135deg, #fff5f5 0%, #ffecec 100%);
            border: 2px solid #ff4444;
        }

    .sale-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        background: #ff4444;
        color: white;
        padding: 10px 15px;
        border-radius: 0.25rem;
        font-size: 0.85rem;
        font-weight: bold;
        z-index: 2;
    }

    .wishlist-form {
        z-index: 3;
    }

    .product-card:hover {
        transform: translateY(-5px);
    }

    .sale-price {
        color: #d32f2f !important;
        font-size: 1.3rem !important;
    }

    .original-price {
        font-size: 0.9rem !important;
    }

    .filter-card {
        transition: all 0.3s ease;
        background-color: #ffffff;
    }

    .btn-group .btn {
        border-radius: 0;
        flex: 1;
        padding: 0.75rem 1rem;
        font-weight: 500;
    }

        .btn-group .btn:first-child {
            border-top-left-radius: 0.5rem;
            border-bottom-left-radius: 0.5rem;
        }

        .btn-group .btn:last-child {
            border-top-right-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
        }

    .clothing-type-btn {
        min-width: 100px;
        margin: 0.25rem;
        padding: 0.5rem 1rem;
        font-weight: 500;
        border-radius: 0.5rem;
    }

    .btn-outline-danger {
        border-width: 2px;
        font-weight: 500;
    }

    @@media (max-width: 767px) {
        .btn-group {
            flex-direction: column;
        }

            .btn-group .btn {
                border-radius: 0.5rem;
                margin-bottom: 0.5rem;
            }
    }
</style>

<div class="container my-5">
    <h1 class="text-center mb-5">@Resource.OurProducts</h1>

    <div class="row mb-4">
        <div class="col-lg-10 mx-auto">
            <div class="card shadow-sm border-0 rounded-3 p-4">
                <div class="row g-4">
                    <!-- Gender Filter -->
                    <div class="col-md-4">
                        <h5 class="mb-3 text-center">@Resource.FilterGender <i class="fa-solid fa-venus-mars"></i></h5>
                        <div class="d-flex justify-content-center">
                            <div class="btn-group btn-group-lg w-100 gap-2">
                                <a href="@Url.Action("Index", "Product", new { genderId = "1", clothingTypeId })"
                                   class="btn @(genderId == "1" ? "btn-primary" : "btn-outline-primary")">
                                    @Resource.Men
                                </a>
                                <a href="@Url.Action("Index", "Product", new { genderId = "2", clothingTypeId })"
                                   class="btn @(genderId == "2" ? "btn-primary" : "btn-outline-primary")">
                                    @Resource.Women
                                </a>
                                <a href="@Url.Action("Index", "Product", new { genderId = "3", clothingTypeId })"
                                   class="btn @(genderId == "3" ? "btn-primary" : "btn-outline-primary")">
                                    @Resource.Kids
                                </a>
                            </div>
                        </div>
                    </div>

                    <!-- Clothing Type Filter -->
                    <div class="col-md-6">
                        <h5 class="mb-3 text-center">@Resource.FilterClothingType <i class="fa-solid fa-shirt"></i></h5>
                        <div class="d-flex flex-wrap justify-content-center gap-2">
                            <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "1" })"
                               class="btn @(clothingTypeId == "1" ? "btn-primary" : "btn-outline-primary")">
                                @Resource.T_Shirts
                            </a>
                            <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "2" })"
                               class="btn @(clothingTypeId == "2" ? "btn-primary" : "btn-outline-primary")">
                                @Resource.Jackets
                            </a>
                            <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "3" })"
                               class="btn @(clothingTypeId == "3" ? "btn-primary" : "btn-outline-primary")">
                                @Resource.Shoes
                            </a>
                            <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "4" })"
                               class="btn @(clothingTypeId == "4" ? "btn-primary" : "btn-outline-primary")">
                                @Resource.Jeans
                            </a>
                            <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "5" })"
                               class="btn @(clothingTypeId == "5" ? "btn-primary" : "btn-outline-primary")">
                                @Resource.Shirts
                            </a>
                            <a href="@Url.Action("Index", "Product", new { genderId, clothingTypeId = "6" })"
                               class="btn @(clothingTypeId == "6" ? "btn-primary" : "btn-outline-primary")">
                                @Resource.Shorts
                            </a>
                        </div>
                    </div>

                    <!-- Reset Filters -->
                    <div class="col-md-2 d-flex align-items-center justify-content-center">
                        <a href="@Url.Action("Index", "Product", new { genderId = "", clothingTypeId = "" })"
                           class="btn btn-outline-danger">
                            <i class="fa-solid fa-trash-can-arrow-up me-1"></i>@Resource.ResetFilters
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4">
        @if (Model.Any())
        {
            foreach (var product in Model)
            {
                <div class="col-sm-6 col-md-4">
                    <div class="card product-card shadow-sm border-0 rounded-3 @(product.IsOnSale ? "on-sale" : "")">
                        @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                        {
                            <span class="sale-badge">
                                @product.DiscountPercentage% OFF
                            </span>
                        }

                        @if (User.Identity.IsAuthenticated)
                        {
                            <form asp-action="AddToWishlist" asp-controller="Wishlist" asp-route-productId="@product.Id" method="post" class="position-absolute wishlist-form" style="top: 10px; right: 10px; cursor: pointer;">
                                <button type="submit" class="btn btn-link">
                                    <i class="fa-solid fa-heart @(ViewBag.WishlistProductIds.Contains(product.Id) ? "text-danger" : "text-muted") fa-2x"></i>
                                </button>
                            </form>
                        }

                        <div class="card-img-top p-3 text-center bg-light" style="height: 280px;">
                            <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 100%; width: auto; object-fit: contain;">
                        </div>

                        <div class="card-body text-center">
                            <h5 class="card-title font-weight-bold">@product.Name</h5>

                            <p class="card-text fw-bold" style="font-size: 1.2rem;">
                                @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                                {
                                    <span class="original-price text-muted text-decoration-line-through">
                                        @product.Price.ToString("C", new CultureInfo("en-US"))
                                    </span>
                                    <span class="sale-price">
                                        @product.DiscountedPrice.ToString("C", new CultureInfo("en-US"))
                                    </span>
                                }
                                else
                                {
                                    <span class="text-success">
                                        @product.Price.ToString("C", new CultureInfo("en-US"))
                                    </span>
                                }
                            </p>

                            <p class="card-text text-muted">
                                @Resource.Stock: <strong>@product.StockQuantity</strong>
                            </p>

                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-outline-primary rounded-pill px-4">
                                @Resource.ViewDetails <i class="fa-solid fa-circle-info"></i>
                            </a>

                            @if (User.Identity.IsAuthenticated)
                            {
                                <form asp-action="AddToCart" asp-controller="ShoppingCart" method="post" class="mt-3">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <input type="hidden" name="quantity" value="1" />
                                    <button type="submit" class="btn btn-success rounded-pill px-4">
                                        @Resource.AddToCart <i class="fa-solid fa-cart-shopping"></i>
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <h1 class="text-center mt-5">@Resource.WeDon_tCurrently</h1>
        }

        <nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
            @Html.PagedListPager((X.PagedList.IPagedList?)Model, page => Url.Action("Index", new { page }),
                     new PagedListRenderOptions
            {
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded
            })
        </nav>
    </div>
</div>