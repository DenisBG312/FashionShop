@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@model IEnumerable<OnlineShop.Data.Models.Product>

@{
    ViewData["Title"] = "Products";
    var genderId = Context.Request.Query["genderId"].ToString();
    var clothingTypeId = Context.Request.Query["clothingTypeId"].ToString();
    var minPrice = Context.Request.Query["minPrice"].ToString();
    var maxPrice = Context.Request.Query["maxPrice"].ToString();
}

<link href="~/css/product-index.css" rel="stylesheet" />

<div class="container my-5">
    <h1 class="text-center mb-4">Our Products</h1>

    <div class="row">
        <div class="col-lg-3">
            <div class="filter-sidebar">
                <div class="filter-mobile-toggle d-lg-none">
                    <button class="btn btn-outline-primary w-100 mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                        <i class="fa-solid fa-filter me-2"></i>Show Filters
                    </button>
                </div>

                <div id="filterCollapse" class="filter-collapse d-lg-block">
                    <h4 class="mb-3">Filter Products</h4>

                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Gender</span>
                            <i class="fa-solid fa-venus-mars"></i>
                        </div>
                        <div class="filter-buttons">
                            @foreach (var gender in ViewBag.GenderCounts)
                            {
                                <a asp-action="Index"
                                   asp-controller="Product"
                                   asp-route-genderId="@gender.Id"
                                   asp-route-clothingTypeId="@clothingTypeId"
                                   asp-route-minPrice="@minPrice"
                                   asp-route-maxPrice="@maxPrice"
                                   class="filter-button @(genderId == gender.Id.ToString() ? "active" : "")">
                                    @gender.Name
                                    <span>(@gender.Count)</span>
                                </a>
                            }
                        </div>
                    </div>

                    <div class="filter-divider"></div>

                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Clothing Type</span>
                            <i class="fa-solid fa-shirt"></i>
                        </div>
                        <div class="filter-buttons">
                            @foreach (var type in ViewBag.ClothingTypeCounts)
                            {
                                <a asp-action="Index"
                                   asp-controller="Product"
                                   asp-route-genderId="@genderId"
                                   asp-route-clothingTypeId="@type.Id"
                                   asp-route-minPrice="@minPrice"
                                   asp-route-maxPrice="@maxPrice"
                                   class="filter-button @(clothingTypeId == type.Id.ToString() ? "active" : "")">
                                    @type.Name
                                    <span>(@type.Count)</span>
                                </a>
                            }
                        </div>
                    </div>

                    <div class="filter-divider"></div>

                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Price Range</span>
                            <i class="fa-solid fa-dollar-sign"></i>
                        </div>
                        <div class="price-range-container">
                            <form method="get" asp-action="Index" asp-controller="Product">
                                <input type="hidden" name="genderId" value="@genderId" />
                                <input type="hidden" name="clothingTypeId" value="@clothingTypeId" />

                                <div class="price-inputs">
                                    <div class="price-input">
                                        <label for="minPrice" class="form-label">Min:</label>
                                        <input type="number" 
                                               class="form-control" 
                                               id="minPrice" 
                                               name="minPrice" 
                                               value="@(ViewBag.MinPrice?.ToString() ?? "")" 
                                               placeholder="$0"
                                               min="0">
                                    </div>
                                    <div class="price-input">
                                        <label for="maxPrice" class="form-label">Max:</label>
                                        <input type="number" 
                                               class="form-control" 
                                               id="maxPrice" 
                                               name="maxPrice" 
                                               value="@(ViewBag.MaxPrice?.ToString() ?? "")" 
                                               placeholder="$1000"
                                               min="0">
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary w-100 mt-3">Apply Filter</button>
                            </form>
                        </div>
                    </div>

                    <div class="filter-divider"></div>

                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Size</span>
                            <i class="fa-solid fa-ruler"></i>
                        </div>
                        <div class="mb-2">
                            <div class="custom-checkbox">
                                <input type="checkbox" id="size-xs" name="size" value="XS">
                                <label for="size-xs">XS</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" id="size-s" name="size" value="S">
                                <label for="size-s">S</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" id="size-m" name="size" value="M">
                                <label for="size-m">M</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" id="size-l" name="size" value="L">
                                <label for="size-l">L</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" id="size-xl" name="size" value="XL">
                                <label for="size-xl">XL</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" id="size-xxl" name="size" value="XXL">
                                <label for="size-xxl">XXL</label>
                            </div>
                        </div>
                    </div>

                    <div class="filter-divider"></div>

                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Availability</span>
                            <i class="fa-solid fa-store"></i>
                        </div>
                        <div class="mb-2">
                            <div class="custom-checkbox">
                                <input type="checkbox" id="in-stock" name="availability" value="inStock">
                                <label for="in-stock">In Stock</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" id="on-sale" name="availability" value="onSale">
                                <label for="on-sale">On Sale</label>
                            </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(genderId) || !string.IsNullOrEmpty(clothingTypeId) || !string.IsNullOrEmpty(minPrice) || !string.IsNullOrEmpty(maxPrice))
                    {
                        <a asp-action="Index" asp-controller="Product" asp-route-genderId="" asp-route-clothingTypeId="" asp-route-minPrice="" asp-route-maxPrice="" class="reset-button text-center">
                            <i class="fa-solid fa-xmark me-2"></i>Reset Filters
                        </a>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-9">
            <div class="main-title d-flex justify-content-between align-items-center">
                <h2>Products</h2>
                <span class="products-count">@Model.Count() items found</span>
            </div>

            <div class="sort-container">
                <div class="showing-items">
                    Showing <strong>1-@Model.Count()</strong> out of <strong>@Model.Count()</strong> products
                </div>
                <div class="d-flex align-items-center">
                    <label for="sortOrder" class="me-2">Sort by:</label>
                    <select id="sortOrder" class="form-select sort-dropdown">
                        <option value="popular">Most Popular</option>
                        <option value="price-asc">Price: Low to High</option>
                        <option value="price-desc">Price: High to Low</option>
                        <option value="newest">Newest</option>
                    </select>
                </div>
            </div>

            <div class="row g-4">
                @if (Model.Any())
                {
                    foreach (var product in Model)
                    {
                        <div class="col-sm-6 col-lg-4">
                            <div class="card product-card shadow-sm border-0 rounded-3 @(product.IsOnSale ? "on-sale" : "")">
                                <a asp-action="Details" asp-controller="Product" asp-route-id="@product.Id" class="d-md-none mobile-card-link"></a>

                                @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                                {
                                    <span class="sale-badge">
                                        @product.DiscountPercentage% OFF
                                    </span>
                                }

                                @if (User.Identity.IsAuthenticated)
                                {
                                    <form asp-action="AddToWishlist" asp-controller="Wishlist" asp-route-productId="@product.Id" method="post" class="position-absolute wishlist-form" style="top: 10px; right: 10px; cursor: pointer;">
                                        <button type="submit" class="btn btn-link">
                                            <i class="fa-solid fa-heart @(ViewBag.WishlistProductIds.Contains(product.Id) ? "text-danger" : "text-muted") fa-2x"></i>
                                        </button>
                                    </form>
                                }

                                <div class="card-img-top p-3 text-center bg-light" style="height: 280px;">
                                    <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 100%; width: auto; object-fit: contain;">
                                </div>

                                <div class="card-body text-center">
                                    <h5 class="card-title font-weight-bold">@product.Name</h5>

                                    <p class="card-text fw-bold" style="font-size: 1.2rem;">
                                        @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                                        {
                                            <span class="original-price text-muted text-decoration-line-through">
                                                @product.Price.ToString("C", new CultureInfo("en-US"))
                                            </span>
                                            <span class="sale-price">
                                                @product.DiscountedPrice.ToString("C", new CultureInfo("en-US"))
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-success">
                                                @product.Price.ToString("C", new CultureInfo("en-US"))
                                            </span>
                                        }
                                    </p>

                                    <p class="card-text text-muted">
                                        Stock: <strong>@product.StockQuantity</strong>
                                    </p>

                                    <div class="mobile-product-actions">
                                        <a asp-action="Details" asp-controller="Product" asp-route-id="@product.Id" class="btn btn-outline-primary rounded-pill px-4">
                                            View Details <i class="fa-solid fa-circle-info"></i>
                                        </a>

                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <form asp-action="AddToCart" asp-controller="ShoppingCart" method="post" class="mt-3">
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <input type="hidden" name="quantity" value="1" />
                                                <button type="submit" class="btn btn-success rounded-pill px-4">
                                                    Add to Cart <i class="fa-solid fa-cart-shopping"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="alert alert-info text-center p-5">
                            <i class="fa-solid fa-box-open fa-3x mb-3"></i>
                            <h3>We don't currently have any products matching your search.</h3>
                            <p>Try different filters or check back later.</p>
                        </div>
                    </div>
                }
            </div>

            <nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
                @Html.PagedListPager((X.PagedList.IPagedList?)Model, page => Url.Action("Index", new { page, genderId, clothingTypeId, minPrice, maxPrice }),
                         new PagedListRenderOptions
                {
                    UlElementClasses = new[] { "pagination" },
                    LiElementClasses = new[] { "page-item" },
                    PageClasses = new[] { "page-link" },
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded
                })
            </nav>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            if (window.innerWidth <= 767) {
                $('.product-card').on('click', function(e) {
                    if (!$(e.target).closest('.wishlist-form, .mobile-product-actions').length) {
                        const detailsUrl = $(this).find('.mobile-card-link').attr('href');
                        window.location.href = detailsUrl;
                    }
                });
            }

            $('#sortOrder').on('change', function() {
                const sortOrder = $(this).val();
                console.log("Sort by:", sortOrder);
            });

            $('.price-range-container form').on('submit', function(e) {
                const min = parseInt($('#minPrice').val()) || 0;
                const max = parseInt($('#maxPrice').val()) || 0;

                if (min > max) {
                    $('#minPrice').val(max);
                    $('#maxPrice').val(min);
                    $(this).find('button').html('<i class="fa-solid fa-sync-alt spin"></i> Applying...');
                    setTimeout(() => this.submit(), 500);
                    e.preventDefault();
                }
            });

            $('#minPrice, #maxPrice').on('input', function() {
                const min = parseInt($('#minPrice').val()) || 0;
                const max = parseInt($('#maxPrice').val()) || 0;

                $(this).toggleClass('is-invalid',
                    (this.id === 'minPrice' && min < 0) ||
                    (this.id === 'maxPrice' && max < 0) ||
                    (min > max && max !== 0)
                );
            });
        });
    </script>
}