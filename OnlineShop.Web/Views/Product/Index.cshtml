@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@using System.Linq
@model IEnumerable<OnlineShop.Data.Models.Product>

@{
    ViewData["Title"] = "Products";
    var genderId = Context.Request.Query["genderId"].ToString();
    var clothingTypeId = Context.Request.Query["clothingTypeId"].ToString();
    var minPrice = Context.Request.Query["minPrice"].ToString();
    var maxPrice = Context.Request.Query["maxPrice"].ToString();
    var sortOrder = Context.Request.Query["sortOrder"].ToString();
}

<link href="~/css/product-index.css" rel="stylesheet" />

<div class="container my-5">
    <h1 class="text-center mb-4">Our Products</h1>

    <div class="row">
        <!-- Filter Sidebar -->
        <div class="col-lg-3">
            <div class="filter-sidebar">
                <div class="filter-mobile-toggle d-lg-none">
                    <button class="btn btn-outline-primary w-100 mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                        <i class="fa-solid fa-filter me-2"></i>Show Filters
                    </button>
                </div>

                <div id="filterCollapse" class="filter-collapse d-lg-block">
                    <h4 class="mb-3">Filter Products</h4>

                    <!-- Gender Filter -->
                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Gender</span>
                            <i class="fa-solid fa-venus-mars"></i>
                        </div>
                        <div class="filter-buttons">
                            @foreach (var gender in ViewBag.GenderCounts)
                            {
                                <a asp-action="Index"
                                   asp-controller="Product"
                                   asp-route-genderId="@gender.Id"
                                   asp-route-clothingTypeId="@clothingTypeId"
                                   asp-route-minPrice="@minPrice"
                                   asp-route-maxPrice="@maxPrice"
                                   asp-route-sortOrder="@sortOrder"
                                   class="filter-button @(genderId == gender.Id.ToString() ? "active" : "")">
                                    @gender.Name
                                    <span>(@gender.Count)</span>
                                </a>
                            }
                        </div>
                    </div>

                    <div class="filter-divider"></div>

                    <!-- Clothing Type Filter -->
                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Clothing Type</span>
                            <i class="fa-solid fa-shirt"></i>
                        </div>
                        <div class="filter-buttons">
                            @foreach (var type in ViewBag.ClothingTypeCounts)
                            {
                                <a asp-action="Index"
                                   asp-controller="Product"
                                   asp-route-genderId="@genderId"
                                   asp-route-clothingTypeId="@type.Id"
                                   asp-route-minPrice="@minPrice"
                                   asp-route-maxPrice="@maxPrice"
                                   asp-route-sortOrder="@sortOrder"
                                   class="filter-button @(clothingTypeId == type.Id.ToString() ? "active" : "")">
                                    @type.Name
                                    <span>(@type.Count)</span>
                                </a>
                            }
                        </div>
                    </div>

                    <div class="filter-divider"></div>

                    <!-- Price Range Filter -->
                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Price Range</span>
                            <i class="fa-solid fa-dollar-sign"></i>
                        </div>
                        <div class="price-range-container">
                            <form method="get" asp-action="Index" asp-controller="Product">
                                <input type="hidden" name="genderId" value="@genderId" />
                                <input type="hidden" name="clothingTypeId" value="@clothingTypeId" />
                                <input type="hidden" name="sortOrder" value="@sortOrder" />

                                <div class="price-inputs">
                                    <div class="price-input">
                                        <label for="minPrice" class="form-label">Min:</label>
                                        <input type="number"
                                               class="form-control"
                                               id="minPrice"
                                               name="minPrice"
                                               value="@minPrice"
                                               placeholder="$0"
                                               min="0" />
                                    </div>
                                    <div class="price-input">
                                        <label for="maxPrice" class="form-label">Max:</label>
                                        <input type="number"
                                               class="form-control"
                                               id="maxPrice"
                                               name="maxPrice"
                                               value="@maxPrice"
                                               placeholder="$1000"
                                               min="0" />
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary w-100 mt-3">Apply Filter</button>
                            </form>
                        </div>
                    </div>

                    <div class="filter-divider"></div>

                    <!-- Size Filter -->
                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Size</span>
                            <i class="fa-solid fa-ruler"></i>
                        </div>
                        <form method="get" asp-action="Index" asp-controller="Product">
                            <input type="hidden" name="genderId" value="@genderId" />
                            <input type="hidden" name="clothingTypeId" value="@clothingTypeId" />
                            <input type="hidden" name="minPrice" value="@minPrice" />
                            <input type="hidden" name="maxPrice" value="@maxPrice" />
                            <input type="hidden" name="sortOrder" value="@sortOrder" />

                            <div class="mb-2">
                                @if (ViewBag.Sizes != null && ViewBag.Sizes.Count > 0)
                                {
                                    @foreach (var size in ViewBag.Sizes)
                                    {
                                        <div class="custom-checkbox">
                                            <input type="checkbox"
                                                   id="size-@size.Id"
                                                   name="sizeIds"
                                                   value="@size.Id"
                                            @(Context.Request.Query["sizeIds"].ToString().Split(',').ToList().Contains(size.Id.ToString()) ? "checked" : "") />
                                            <label for="size-@size.Id">@size.Name</label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">No sizes available.</p>
                                }
                            </div>

                            <button type="submit" class="btn btn-primary w-100 mt-3">
                                <i class="fa-solid fa-filter me-2"></i>Apply Size Filter
                            </button>
                        </form>
                    </div>

                    <div class="filter-divider"></div>

                    <!-- Special Offers Filter -->
                    <div class="filter-section">
                        <div class="filter-title">
                            <span>Special offers</span>
                            <i class="fa-solid fa-tag"></i>
                        </div>
                        <form method="get" asp-action="Index" asp-controller="Product">
                            <input type="hidden" name="genderId" value="@genderId" />
                            <input type="hidden" name="clothingTypeId" value="@clothingTypeId" />
                            <input type="hidden" name="minPrice" value="@minPrice" />
                            <input type="hidden" name="maxPrice" value="@maxPrice" />
                            <input type="hidden" name="sizeIds" value="@Context.Request.Query["sizeIds"]" />
                            <input type="hidden" name="sortOrder" value="@sortOrder" />

                            <div class="mb-2">
                                <div class="custom-checkbox">
                                    <input type="checkbox"
                                           id="on-sale"
                                           name="isOnSale"
                                           value="true"
                                    @(ViewBag.IsOnSale ? "checked" : "") />
                                    <label for="on-sale" class="sale-checkbox-label">
                                        <i class="fa-solid fa-fire me-2 text-danger"></i>On Sale
                                    </label>
                                </div>
                            </div>

                            <button type="submit" class="btn btn-danger w-100 mt-3">
                                <i class="fa-solid fa-filter me-2"></i>Apply Offers Filter
                            </button>
                        </form>
                    </div>

                    <!-- Reset Filters Link -->
                    <a asp-action="Index" asp-controller="Product" class="reset-button text-center">
                        <i class="fa-solid fa-xmark me-2"></i>Reset Filters
                    </a>
                </div>
            </div>
        </div>

        <!-- Product Listing -->
        <div class="col-lg-9">
            <div class="main-title d-flex justify-content-between align-items-center">
                <h2>Products</h2>
                <span class="products-count">@Model.Count() items found</span>
            </div>

            <div class="sort-container">
                <div class="showing-items">
                    Showing <strong>1-@Model.Count()</strong> out of <strong>@Model.Count()</strong> products
                </div>
                <div class="d-flex align-items-center">
                    <label for="sortOrder" class="me-2">Sort by:</label>
                    <select id="sortOrder" class="form-select sort-dropdown">
                        <option value="popular" selected="@(sortOrder == "popular")">Most Popular</option>
                        <option value="price-asc" selected="@(sortOrder == "price-asc")">Price: Low to High</option>
                        <option value="price-desc" selected="@(sortOrder == "price-desc")">Price: High to Low</option>
                        <option value="newest" selected="@(sortOrder == "newest")">Newest</option>
                    </select>
                </div>
            </div>

            <div class="row g-4">
                @if (Model.Any())
                {
                    foreach (var product in Model)
                    {
                        <div class="col-sm-6 col-lg-4">
                            <div class="card product-card shadow-sm border-0 rounded-3 @(product.IsOnSale ? "on-sale" : "")">
                                <a asp-action="Details" asp-controller="Product" asp-route-id="@product.Id" class="d-md-none mobile-card-link"></a>

                                @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                                {
                                    <span class="sale-badge">
                                        @product.DiscountPercentage% OFF
                                    </span>
                                }

                                @if (User.Identity.IsAuthenticated)
                                {
                                    <form asp-action="AddToWishlist" asp-controller="Wishlist" asp-route-productId="@product.Id" method="post" class="position-absolute wishlist-form" style="top: 10px; right: 10px; cursor: pointer;">
                                        <button type="submit" class="btn btn-link">
                                            <i class="fa-solid fa-heart @(ViewBag.WishlistProductIds.Contains(product.Id) ? "text-danger" : "text-muted") fa-2x"></i>
                                        </button>
                                    </form>
                                }

                                <div class="card-img-top p-3 text-center bg-light" style="height: 280px;">
                                    <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 100%; width: auto; object-fit: contain;">
                                </div>

                                <div class="card-body text-center">
                                    <h5 class="card-title font-weight-bold">@product.Name</h5>

                                    <p class="card-text fw-bold" style="font-size: 1.2rem;">
                                        @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                                        {
                                            <span class="original-price text-muted text-decoration-line-through">
                                                @product.Price.ToString("C", new CultureInfo("en-US"))
                                            </span>
                                            <span class="sale-price">
                                                @product.DiscountedPrice.ToString("C", new CultureInfo("en-US"))
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-success">
                                                @product.Price.ToString("C", new CultureInfo("en-US"))
                                            </span>
                                        }
                                    </p>

                                    <div class="mobile-product-actions">
                                        <a asp-action="Details" asp-controller="Product" asp-route-id="@product.Id" class="btn btn-outline-primary rounded-pill px-4">
                                            View Details <i class="fa-solid fa-circle-info"></i>
                                        </a>

                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <form asp-action="AddToCart" asp-controller="ShoppingCart" method="post" class="mt-3">
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <input type="hidden" name="quantity" value="1" />
                                                <input type="hidden" name="sizeId" class="selected-size-input" />

                                                <!-- Changed button to trigger modal -->
                                                <button type="button"
                                                        class="btn btn-success rounded-pill px-4 add-to-cart-trigger"
                                                        data-product-id="@product.Id"
                                                        data-sizes='@Json.Serialize(product.ProductSizes?.Select(ps => new { Id = ps.SizeId, Name = ps.Size?.Name }))'>
                                                    Add to Cart <i class="fa-solid fa-cart-shopping"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="alert alert-info text-center p-5">
                            <i class="fa-solid fa-box-open fa-3x mb-3"></i>
                            <h3>We don't currently have any products matching your search.</h3>
                            <p>Try different filters or check back later.</p>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            <nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
                @Html.PagedListPager((X.PagedList.IPagedList?)Model, page => Url.Action("Index", new
                    {
                        page,
                        genderId,
                        clothingTypeId,
                        minPrice,
                        maxPrice,
                        sortOrder
                    }), new PagedListRenderOptions
           {
               UlElementClasses = new[] { "pagination" },
               LiElementClasses = new[] { "page-item" },
               PageClasses = new[] { "page-link" },
               DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
               DisplayLinkToNextPage = PagedListDisplayMode.Always,
               DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
               DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded
           })
            </nav>
        </div>
    </div>
</div>

<!-- Size Selection Modal -->
<div class="modal fade" id="sizeSelectionModal" tabindex="-1" aria-labelledby="sizeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sizeModalLabel">Select Size</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="size-options">
                    <!-- Size options will be dynamically inserted here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary confirm-size">Add to Cart</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // Size selection modal handling
            $('.add-to-cart-trigger').on('click', function() {
                const productId = $(this).data('product-id');
                const sizes = $(this).data('sizes');
                const $form = $(this).closest('form');

                // Clear previous size options
                const $sizeOptions = $('.size-options').empty();

                // Add size options
                if (sizes && sizes.length > 0) {
                    sizes.forEach(size => {
                        $sizeOptions.append(`
                            <div class="form-check">
                                <input class="form-check-input size-radio"
                                       type="radio"
                                       name="size-${productId}"
                                       id="size-${size.id}-${productId}"
                                       value="${size.id}">
                                <label class="form-check-label" for="size-${size.id}-${productId}">
                                    ${size.name}
                                </label>
                            </div>
                        `);
                    });
                } else {
                    $sizeOptions.append('<p>No sizes available for this product</p>');
                }

                // Show modal
                const modal = new bootstrap.Modal(document.getElementById('sizeSelectionModal'));
                modal.show();

                // Handle confirm button
                $('.confirm-size').off('click').on('click', function() {
                    const selectedSize = $('.size-radio:checked').val();
                    if (selectedSize) {
                        $form.find('.selected-size-input').val(selectedSize);
                        $form.submit();
                        modal.hide();
                    } else {
                        alert('Please select a size before adding to cart');
                    }
                });
            });

            // Sort dropdown handling
            $('#sortOrder').on('change', function() {
                const sortOrder = $(this).val();
                const currentUrl = new URL(window.location.href);
                currentUrl.searchParams.set('sortOrder', sortOrder);
                window.location.href = currentUrl.toString();
            });

            // Mobile card click handling
            if (window.innerWidth <= 767) {
                $('.product-card').on('click', function(e) {
                    if (!$(e.target).closest('.wishlist-form, .mobile-product-actions').length) {
                        const detailsUrl = $(this).find('.mobile-card-link').attr('href');
                        window.location.href = detailsUrl;
                    }
                });
            }

            // Price range validation
            $('.price-range-container form').on('submit', function(e) {
                const min = parseInt($('#minPrice').val()) || 0;
                const max = parseInt($('#maxPrice').val()) || 0;

                if (min > max) {
                    $('#minPrice').val(max);
                    $('#maxPrice').val(min);
                    $(this).find('button').html('<i class="fa-solid fa-sync-alt spin"></i> Applying...');
                    setTimeout(() => this.submit(), 500);
                    e.preventDefault();
                }
            });

            $('#minPrice, #maxPrice').on('input', function() {
                const min = parseInt($('#minPrice').val()) || 0;
                const max = parseInt($('#maxPrice').val()) || 0;

                $(this).toggleClass('is-invalid',
                    (this.id === 'minPrice' && min < 0) ||
                    (this.id === 'maxPrice' && max < 0) ||
                    (min > max && max !== 0)
                );
            });
        });
    </script>
}